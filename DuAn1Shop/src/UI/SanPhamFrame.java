/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.SanPhamDAO;
import Helper.DialogHelper;
import Helper.ShareHelper;
import Helper.UtilityHelper;
import Model.SanPham;
import java.awt.Color;
import java.io.File;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class SanPhamFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form SanPhamFrame
     */
    public SanPhamFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel23 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtGhiChuSP = new javax.swing.JTextArea();
        lblHinh = new javax.swing.JLabel();
        btnTimKiemSP = new javax.swing.JButton();
        btnFirstSP = new javax.swing.JButton();
        btnPrevSP = new javax.swing.JButton();
        txtTimKiemSP = new javax.swing.JTextField();
        btnThemSP = new javax.swing.JButton();
        btnNextSP = new javax.swing.JButton();
        btnCapNhatSP = new javax.swing.JButton();
        btnLastSP = new javax.swing.JButton();
        btnXoaSP = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        btnClearSP = new javax.swing.JButton();
        txtMaSP = new javax.swing.JTextField();
        rdoTheoMaSP = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        rdoTheoTenSP = new javax.swing.JRadioButton();
        txtTenSP = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cboLoaiSP = new javax.swing.JComboBox<>();
        cboThuongHieuSP = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtSoLuongSP = new javax.swing.JTextField();
        txtGiaNhapSP = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtGiaBanSP = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Quản Lý Sản Phẩm");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel23.setText("Ghi chú");

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MaSP", "TenSP", "Thương hiệu", "Loại", "SL", "Giá nhập", "Giá bán", "Hình", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblSanPham);

        txtGhiChuSP.setColumns(20);
        txtGhiChuSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtGhiChuSP.setRows(5);
        jScrollPane7.setViewportView(txtGhiChuSP);

        lblHinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblHinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhMouseClicked(evt);
            }
        });

        btnTimKiemSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnTimKiemSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Search.png"))); // NOI18N
        btnTimKiemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemSPActionPerformed(evt);
            }
        });

        btnFirstSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnFirstSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/1.png"))); // NOI18N
        btnFirstSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstSPActionPerformed(evt);
            }
        });

        btnPrevSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnPrevSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/prev.png"))); // NOI18N
        btnPrevSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevSPActionPerformed(evt);
            }
        });

        txtTimKiemSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        btnThemSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnThemSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Accept.png"))); // NOI18N
        btnThemSP.setText("Thêm");
        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });

        btnNextSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnNextSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/next.png"))); // NOI18N
        btnNextSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextSPActionPerformed(evt);
            }
        });

        btnCapNhatSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnCapNhatSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Upload.png"))); // NOI18N
        btnCapNhatSP.setText("Cập nhật");
        btnCapNhatSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatSPActionPerformed(evt);
            }
        });

        btnLastSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnLastSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/2.png"))); // NOI18N
        btnLastSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastSPActionPerformed(evt);
            }
        });

        btnXoaSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnXoaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete.png"))); // NOI18N
        btnXoaSP.setText("Xóa");
        btnXoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel16.setText("Mã Sản Phẩm");

        btnClearSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnClearSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Refresh.png"))); // NOI18N
        btnClearSP.setText("Mới");
        btnClearSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSPActionPerformed(evt);
            }
        });

        txtMaSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        rdoTheoMaSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        rdoTheoMaSP.setText("Theo mã");

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel17.setText("Tên Sản Phẩm");

        rdoTheoTenSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        rdoTheoTenSP.setSelected(true);
        rdoTheoTenSP.setText("Theo tên");

        txtTenSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtTenSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenSPActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel18.setText("Loại Sản Phẩm");

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel19.setText("Thương Hiệu");

        cboLoaiSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cboLoaiSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quần áo mùa đông", "Quần áo mùa hè" }));

        cboThuongHieuSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cboThuongHieuSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gucci", "LV", "balenciaga", "Adidas" }));

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel20.setText("Số lượng");

        jLabel21.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel21.setText("Giá nhập");

        txtSoLuongSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtGiaNhapSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel22.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel22.setText("Giá bán");

        txtGiaBanSP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Quản lý sản phẩm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(rdoTheoMaSP)
                        .addGap(33, 33, 33)
                        .addComponent(rdoTheoTenSP)
                        .addGap(116, 116, 116))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiemSP)
                        .addGap(87, 87, 87))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel18)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel21)
                                            .addComponent(jLabel22))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtGiaBanSP, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtGiaNhapSP, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtMaSP)
                                                .addComponent(cboLoaiSP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtSoLuongSP, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel23))
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(cboThuongHieuSP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnFirstSP)
                                        .addGap(30, 30, 30)
                                        .addComponent(btnPrevSP)
                                        .addGap(32, 32, 32)
                                        .addComponent(btnNextSP)
                                        .addGap(30, 30, 30)
                                        .addComponent(btnLastSP)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(37, 37, 37))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(btnThemSP)
                                .addGap(44, 44, 44)
                                .addComponent(btnCapNhatSP)
                                .addGap(44, 44, 44)
                                .addComponent(btnXoaSP)
                                .addGap(44, 44, 44)
                                .addComponent(btnClearSP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(490, 490, 490)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoTheoMaSP)
                            .addComponent(rdoTheoTenSP))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTimKiemSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNextSP)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnFirstSP)
                                .addComponent(btnPrevSP)
                                .addComponent(btnLastSP)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(cboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(txtSoLuongSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel21)
                                    .addComponent(txtGiaNhapSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(txtGiaBanSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(cboThuongHieuSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThemSP)
                            .addComponent(btnCapNhatSP)
                            .addComponent(btnXoaSP)
                            .addComponent(btnClearSP))))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            this.indexSP = tblSanPham.rowAtPoint(evt.getPoint());
            if (this.indexSP >= 0) {
                this.editDisplaySP();

            }
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void lblHinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhMouseClicked
        // TODO add your handling code here:
        this.selectImage();
    }//GEN-LAST:event_lblHinhMouseClicked

    private void btnTimKiemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemSPActionPerformed
        // TODO add your handling code here:
        if (rdoTheoTenSP.isSelected()) {
            this.loadDBFromSP();
            this.clearSP();
        } else {
            if (rdoTheoMaSP.isSelected()) {
                String masp = txtTimKiemSP.getText();
                for (int row = 0; row < tblSanPham.getRowCount(); row++) {
                    System.out.println(tblSanPham.getValueAt(row, 0));
                    if (tblSanPham.getValueAt(row, 0).toString().equals(masp)) {
                        System.out.println(row);
                        tblSanPham.setRowSelectionInterval(row, row);
                        tblSanPham.setSelectionBackground(Color.MAGENTA);
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_btnTimKiemSPActionPerformed

    private void btnFirstSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstSPActionPerformed
        // TODO add your handling code here:
        this.indexSP = 0;
        this.editDisplaySP();

    }//GEN-LAST:event_btnFirstSPActionPerformed

    private void btnPrevSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevSPActionPerformed
        // TODO add your handling code here:
        this.indexSP--;
        this.editDisplaySP();

    }//GEN-LAST:event_btnPrevSPActionPerformed

    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed

        // TODO add your handling code here:
        this.insertDBFromSP();

    }//GEN-LAST:event_btnThemSPActionPerformed

    private void btnNextSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextSPActionPerformed
        // TODO add your handling code here:
        this.indexSP++;
        this.editDisplaySP();

    }//GEN-LAST:event_btnNextSPActionPerformed

    private void btnCapNhatSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatSPActionPerformed

        this.updateDBFromSP();
    }//GEN-LAST:event_btnCapNhatSPActionPerformed

    private void btnLastSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastSPActionPerformed
        // TODO add your handling code here:
        this.indexSP = tblSanPham.getRowCount() - 1;
        this.editDisplaySP();

    }//GEN-LAST:event_btnLastSPActionPerformed

    private void btnXoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPActionPerformed
        // TODO add your handling code here:
        this.deleteDBFromSP();
    }//GEN-LAST:event_btnXoaSPActionPerformed

    private void btnClearSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSPActionPerformed
        // TODO add your handling code here:
        this.clearSP();
    }//GEN-LAST:event_btnClearSPActionPerformed

    private void txtTenSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenSPActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        loadDBFromSP();
        if (!ShareHelper.USER.isVaitro()) {
            btnCapNhatSP.setEnabled(false);
            btnThemSP.setEnabled(false);
            btnXoaSP.setEnabled(false);
            btnClearSP.setEnabled(false);
        } else {
            setStatusFormSP(true);
        }

    }//GEN-LAST:event_formInternalFrameOpened
    SanPhamDAO spdao = new SanPhamDAO();
    SanPham SanPham = new SanPham();
    int indexSP;

    void init() {
        setImageBasic();
        setTitle("Quản Lý Sản Phẩm");
    }

    void setImageBasic() {
        lblHinh.setIcon(ShareHelper.readLogo("macdinh.jpg"));
        lblHinh.setToolTipText("macdinh.jpg");
    }

    void loadDBFromSP() {
        DefaultTableModel modelSP = (DefaultTableModel) tblSanPham.getModel();
        modelSP.setRowCount(0);
        String keyword = txtTimKiemSP.getText();

        try {
            List<SanPham> list = spdao.selectByKeyword(keyword);
            for (SanPham sp : list) {
                Object[] rows = {
                    sp.getMaSP(), sp.getTenSP(), sp.getThuongHieu(), sp.getLoaiSP(), sp.getSoLuong(), sp.getGiaNhap(), sp.getGiaBan(), sp.getHinhSP(), sp.getGhiChu()
                };
                modelSP.addRow(rows);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    void insertDBFromSP() {
        if (!util.checkMaSP(txtMaSP, this)) {
            DialogHelper.alert(this, "Mã sản phẩm  đã tồn tại");
        }
        if (!check()) {
            return;
        }
        SanPham modelSP = getModelSP();
        try {
            spdao.insert(modelSP);
            this.loadDBFromSP();
            this.clearSP();
            DialogHelper.alert(this, "Thêm thành công");
        } catch (Exception e) {
            DialogHelper.alert(this, "Thêm thất bại");
        }
    }

    void updateDBFromSP() {
        if (!check()) {
            return;
        }

        SanPham modelSP = getModelSP();
        try {
            spdao.update(modelSP);
            this.loadDBFromSP();
            this.clearSP();
            DialogHelper.alert(this, "Cập nhật thành công");
        } catch (Exception e) {
            DialogHelper.alert(this, "Cập nhật thất bại");
        }
    }

    void deleteDBFromSP() {
        if (DialogHelper.confirm(this, "Bạn có muốn xóa sản phẩm này không?")) {
            String masp = txtMaSP.getText();
            try {
                spdao.delete(masp);
                this.loadDBFromSP();
                this.clearSP();
                DialogHelper.alert(this, "Xóa thành công");
            } catch (Exception e) {
                DialogHelper.alert(this, "Xóa thất bại");
            }
        }
    }

    void editDisplaySP() {
        try {
            String masp = (String) tblSanPham.getValueAt(this.indexSP, 0);
            SanPham modelSP = spdao.findById(masp);
            if (modelSP != null) {
                this.setModelSP(modelSP);
                this.setStatusFormSP(false);
                tblSanPham.setRowSelectionInterval(indexSP, indexSP);
                tblSanPham.setSelectionBackground(Color.MAGENTA);
            }
            if (!ShareHelper.USER.isVaitro()) {
                btnCapNhatSP.setEnabled(false);
                btnThemSP.setEnabled(false);
                btnXoaSP.setEnabled(false);
                btnClearSP.setEnabled(false);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void clearSP() {
        setImageBasic();
        this.setModelSP(new SanPham());
        this.setStatusFormSP(true);
        if (!ShareHelper.USER.isVaitro()) {
            btnCapNhatSP.setEnabled(false);
            btnThemSP.setEnabled(false);
            btnXoaSP.setEnabled(false);
            btnClearSP.setEnabled(false);
        }
    }

    void selectImage() {
        if(!ShareHelper.USER.isVaitro()){
            return;
        }
        JFileChooser fileChooser = new JFileChooser("images");
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            if (ShareHelper.saveLogo(file)) {
                // Hiển thị hình lên form                
                lblHinh.setIcon(ShareHelper.readLogo(file.getName()));
                lblHinh.setToolTipText(file.getName());
            }
        }
    }

    void setModelSP(SanPham modelSP) {
        txtMaSP.setText(modelSP.getMaSP());
        txtTenSP.setText(modelSP.getTenSP());
        cboThuongHieuSP.setSelectedItem(modelSP.getThuongHieu());
        cboLoaiSP.setSelectedItem(modelSP.getLoaiSP());
        txtSoLuongSP.setText(String.valueOf(modelSP.getSoLuong()));
        txtGiaNhapSP.setText(String.valueOf(modelSP.getGiaNhap()));
        txtGiaBanSP.setText(String.valueOf(modelSP.getGiaBan()));
        lblHinh.setToolTipText(modelSP.getHinhSP());
        if (modelSP.getHinhSP() != null) {
            lblHinh.setIcon(ShareHelper.readLogo(modelSP.getHinhSP()));
        }
        txtGhiChuSP.setText(modelSP.getGhiChu());
    }

    SanPham getModelSP() {
        SanPham modelSP = new SanPham();
        modelSP.setMaSP(txtMaSP.getText());
        modelSP.setTenSP(txtTenSP.getText());
        modelSP.setThuongHieu(cboThuongHieuSP.getSelectedItem().toString());
        modelSP.setLoaiSP(cboLoaiSP.getSelectedItem().toString());
        modelSP.setSoLuong(Integer.parseInt(txtSoLuongSP.getText()));
        modelSP.setGiaNhap(Float.parseFloat(txtGiaNhapSP.getText()));
        modelSP.setGiaBan(Float.parseFloat(txtGiaBanSP.getText()));
        modelSP.setHinhSP(lblHinh.getToolTipText());
        modelSP.setGhiChu(txtGhiChuSP.getText());
        return modelSP;
    }

    void setStatusFormSP(boolean insertable) {
        txtMaSP.setEditable(insertable);
        btnThemSP.setEnabled(insertable);
        btnCapNhatSP.setEnabled(!insertable);
        btnXoaSP.setEnabled(!insertable);

        boolean first = this.indexSP > 0;
        boolean last = this.indexSP < tblSanPham.getRowCount() - 1;
        btnFirstSP.setEnabled(!insertable && first);
        btnPrevSP.setEnabled(!insertable && first);
        btnNextSP.setEnabled(!insertable && last);
        btnLastSP.setEnabled(!insertable && last);
    }
    UtilityHelper util = new UtilityHelper();

    boolean check() {
        if (!util.checkNull(txtMaSP, "Mã Sản Phẩm", this)) {
            return false;
        }
        if (!util.checkNull(txtTenSP, "Tên Sản Phẩm", this)) {
            return false;
        }
        if (!util.checkNull(txtMaSP, "Mã Sản Phẩm", this)) {
            return false;
        }
        if (!util.checkInt(txtSoLuongSP, this, "Số lượng")) {
            return false;
        }
        if (!util.checkDouble(txtGiaBanSP, this, "Giá bán Sản Phẩm")) {
            return false;
        }
        if (!util.checkDouble(txtGiaNhapSP, this, "Giá Nhập Sản Phẩm")) {
            return false;
        }
        return true;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhatSP;
    private javax.swing.JButton btnClearSP;
    private javax.swing.JButton btnFirstSP;
    private javax.swing.JButton btnLastSP;
    private javax.swing.JButton btnNextSP;
    private javax.swing.JButton btnPrevSP;
    private javax.swing.JButton btnThemSP;
    private javax.swing.JButton btnTimKiemSP;
    private javax.swing.JButton btnXoaSP;
    private javax.swing.JComboBox<String> cboLoaiSP;
    private javax.swing.JComboBox<String> cboThuongHieuSP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JRadioButton rdoTheoMaSP;
    private javax.swing.JRadioButton rdoTheoTenSP;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextArea txtGhiChuSP;
    private javax.swing.JTextField txtGiaBanSP;
    private javax.swing.JTextField txtGiaNhapSP;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtSoLuongSP;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTimKiemSP;
    // End of variables declaration//GEN-END:variables
}
