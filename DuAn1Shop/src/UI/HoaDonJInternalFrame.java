/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.HoaDonCTDAO;
import DAO.HoaDonDAO;
import DAO.KhachHangDAO;
import DAO.SanPhamDAO;
import Helper.DateHelper;
import Helper.DialogHelper;
import Helper.JdbcHelper;
import Helper.ShareHelper;
import Helper.UtilityHelper;
import Model.HoaDon;
import Model.HoaDonCT;
import Model.KhachHang;
import Model.SanPham;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ntva1
 */
public class HoaDonJInternalFrame extends javax.swing.JInternalFrame {
    
    int indexHD = 0;
    int indexHDCT = 0;
    HoaDonDAO hddao = new HoaDonDAO();
    HoaDon hoadon = new HoaDon();
    HoaDonCTDAO hdctdao = new HoaDonCTDAO();
    SanPhamDAO spdao = new SanPhamDAO();
    KhachHangDAO khdao = new KhachHangDAO();
    float tongtienhd;
    double tongtienhdct;
    List<HoaDonCT> listhdct = new ArrayList<>();
    String makhhd = "";
    double tongtieninhd = 0;
    /**
     * Creates new form HoaDonJInternalFrame
     */
    public HoaDonJInternalFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabHoadon = new javax.swing.JTabbedPane();
        tabCapNhatHD = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtMaNVHD = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        txtNgayBanHD = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtTenKHHD = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtGhiChuHD = new javax.swing.JTextArea();
        jLabel37 = new javax.swing.JLabel();
        txtSdtKH = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtGiamGiaHD = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtDiaChiKHHD = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        cboSanPhamHD = new javax.swing.JComboBox<>();
        btnClearHDCT = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        txtMaSPHD = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtTimKiemSPHD = new javax.swing.JTextField();
        txtGiaBanHD = new javax.swing.JTextField();
        btnInHD = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        btnSuaHDTam = new javax.swing.JButton();
        btnXoaHDTam = new javax.swing.JButton();
        btnThemHDTam = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        txtSoLuongHD = new javax.swing.JTextField();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblHoaDonCT = new javax.swing.JTable();
        btntaohoadon = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        txtTongHD = new javax.swing.JTextField();
        btnRefreshFormHD = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tabDanhSachHD = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        txtTimKiemHD = new javax.swing.JTextField();
        btnTimKiemHD = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        btnLastHD = new javax.swing.JButton();
        btnNextHD = new javax.swing.JButton();
        btnPrevHD = new javax.swing.JButton();
        btnFirstHD = new javax.swing.JButton();

        setClosable(true);
        setTitle("Quản Lý Phiếu Hóa Đơn");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        tabHoadon.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tabHoadonComponentShown(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin phiếu nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Mã Hóa Đơn:");

        txtMaHD.setEditable(false);
        txtMaHD.setBackground(new java.awt.Color(204, 204, 204));
        txtMaHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtMaHD.setPreferredSize(new java.awt.Dimension(32, 23));

        jLabel24.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel24.setText("SDT KH");

        jLabel25.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel25.setText("Mã Nhân Viên:");

        txtMaNVHD.setEditable(false);
        txtMaNVHD.setBackground(new java.awt.Color(204, 204, 204));
        txtMaNVHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtMaNVHD.setMinimumSize(new java.awt.Dimension(32, 23));
        txtMaNVHD.setPreferredSize(new java.awt.Dimension(32, 23));

        jLabel26.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel26.setText("Ghi Chú");

        jLabel32.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel32.setText("Ngày Bán");

        txtNgayBanHD.setEditable(false);
        txtNgayBanHD.setBackground(new java.awt.Color(204, 204, 204));
        txtNgayBanHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtNgayBanHD.setPreferredSize(new java.awt.Dimension(32, 23));
        txtNgayBanHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayBanHDActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel33.setText("Tên KH");

        txtTenKHHD.setEditable(false);
        txtTenKHHD.setBackground(new java.awt.Color(204, 204, 204));
        txtTenKHHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtTenKHHD.setPreferredSize(new java.awt.Dimension(32, 23));

        txtGhiChuHD.setColumns(20);
        txtGhiChuHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtGhiChuHD.setRows(5);
        jScrollPane9.setViewportView(txtGhiChuHD);

        jLabel37.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("%");

        txtSdtKH.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtSdtKH.setMinimumSize(new java.awt.Dimension(32, 23));
        txtSdtKH.setPreferredSize(new java.awt.Dimension(32, 23));
        txtSdtKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSdtKHKeyReleased(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel34.setText("Giảm Giá");

        txtGiamGiaHD.setEditable(false);
        txtGiamGiaHD.setBackground(new java.awt.Color(204, 204, 204));
        txtGiamGiaHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtGiamGiaHD.setPreferredSize(new java.awt.Dimension(32, 23));

        jLabel35.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel35.setText("Địa Chỉ");

        txtDiaChiKHHD.setEditable(false);
        txtDiaChiKHHD.setBackground(new java.awt.Color(204, 204, 204));
        txtDiaChiKHHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtDiaChiKHHD.setPreferredSize(new java.awt.Dimension(32, 23));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel24)
                    .addComponent(jLabel33)
                    .addComponent(jLabel11)
                    .addComponent(jLabel35))
                .addGap(23, 23, 23)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaHD, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                    .addComponent(txtMaNVHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTenKHHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDiaChiKHHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSdtKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel32))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNgayBanHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(txtGiamGiaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel26))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtGiamGiaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel34)
                        .addComponent(jLabel37))
                    .addComponent(jLabel11))
                .addGap(27, 27, 27)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtMaNVHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayBanHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addGap(26, 26, 26)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel24)
                                .addComponent(txtSdtKH, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel26))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenKHHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiaChiKHHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35)))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sản phẩm trên phiếu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        jLabel27.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel27.setText("Tên sản phẩm: ");

        cboSanPhamHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cboSanPhamHD.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        cboSanPhamHD.setPreferredSize(new java.awt.Dimension(32, 23));
        cboSanPhamHD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSanPhamHDItemStateChanged(evt);
            }
        });
        cboSanPhamHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSanPhamHDActionPerformed(evt);
            }
        });

        btnClearHDCT.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnClearHDCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Clipboard.png"))); // NOI18N
        btnClearHDCT.setText("Làm mới");
        btnClearHDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearHDCTActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel29.setText("Mã SP");

        txtMaSPHD.setBackground(new java.awt.Color(204, 204, 204));
        txtMaSPHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtMaSPHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaSPHDKeyReleased(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel30.setText("Giá Bán");

        txtTimKiemSPHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtTimKiemSPHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemSPHDKeyReleased(evt);
            }
        });

        txtGiaBanHD.setEditable(false);
        txtGiaBanHD.setBackground(new java.awt.Color(204, 204, 204));
        txtGiaBanHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        btnInHD.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnInHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Fax.png"))); // NOI18N
        btnInHD.setText("In Hóa Đơn");
        btnInHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHDActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel36.setText("VNĐ");

        btnSuaHDTam.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnSuaHDTam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Gear.png"))); // NOI18N
        btnSuaHDTam.setText("Sửa Hóa Đơn");
        btnSuaHDTam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaHDTamActionPerformed(evt);
            }
        });

        btnXoaHDTam.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnXoaHDTam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete.png"))); // NOI18N
        btnXoaHDTam.setText("Xóa Hóa Đơn");
        btnXoaHDTam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHDTamActionPerformed(evt);
            }
        });

        btnThemHDTam.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnThemHDTam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add.png"))); // NOI18N
        btnThemHDTam.setText("Thêm Hóa Đơn");
        btnThemHDTam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHDTamActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel31.setText("Số Lượng");

        txtSoLuongHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtSoLuongHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSoLuongHDKeyReleased(evt);
            }
        });

        tblHoaDonCT.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tblHoaDonCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Ma SP", "Ten San Pham", "So Luong", "Don Gia", "Thanh Tien"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDonCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonCTMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(tblHoaDonCT);

        btntaohoadon.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btntaohoadon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Down.png"))); // NOI18N
        btntaohoadon.setText("Tạo Hóa Đơn");
        btntaohoadon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntaohoadonActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel28.setText("Tổng hóa đơn");

        txtTongHD.setEditable(false);
        txtTongHD.setBackground(new java.awt.Color(204, 204, 204));
        txtTongHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtTongHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongHDActionPerformed(evt);
            }
        });

        btnRefreshFormHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnRefreshFormHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Refresh.png"))); // NOI18N
        btnRefreshFormHD.setText("Refresh");
        btnRefreshFormHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshFormHDActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Tìm sản phẩm");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel1))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTimKiemSPHD)
                            .addComponent(cboSanPhamHD, 0, 214, Short.MAX_VALUE))
                        .addGap(98, 98, 98)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtMaSPHD, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addGap(32, 32, 32)
                                .addComponent(txtSoLuongHD, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(jLabel30)
                        .addGap(50, 50, 50)
                        .addComponent(txtGiaBanHD, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel36)
                        .addGap(11, 11, 11))
                    .addComponent(jScrollPane11))
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(612, 612, 612)
                        .addComponent(btntaohoadon)
                        .addGap(18, 18, 18)
                        .addComponent(btnInHD)
                        .addGap(18, 18, 18)
                        .addComponent(btnRefreshFormHD))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(btnThemHDTam)
                        .addGap(18, 18, 18)
                        .addComponent(btnSuaHDTam, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoaHDTam)
                        .addGap(18, 18, 18)
                        .addComponent(btnClearHDCT)))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel28)
                .addGap(43, 43, 43)
                .addComponent(txtTongHD, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cboSanPhamHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27))
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtGiaBanHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel29)
                                .addComponent(txtMaSPHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSoLuongHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31))
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTimKiemSPHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))))))
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTongHD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSuaHDTam)
                    .addComponent(btnXoaHDTam)
                    .addComponent(btnThemHDTam)
                    .addComponent(btnClearHDCT))
                .addGap(36, 36, 36)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInHD)
                    .addComponent(btntaohoadon)
                    .addComponent(btnRefreshFormHD, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout tabCapNhatHDLayout = new javax.swing.GroupLayout(tabCapNhatHD);
        tabCapNhatHD.setLayout(tabCapNhatHDLayout);
        tabCapNhatHDLayout.setHorizontalGroup(
            tabCapNhatHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCapNhatHDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabCapNhatHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        tabCapNhatHDLayout.setVerticalGroup(
            tabCapNhatHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCapNhatHDLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabHoadon.addTab("Hóa đơn", tabCapNhatHD);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm Kiếm Hóa Đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        txtTimKiemHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        btnTimKiemHD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnTimKiemHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Search.png"))); // NOI18N
        btnTimKiemHD.setText("Tìm Kiếm");
        btnTimKiemHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemHDActionPerformed(evt);
            }
        });

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã HD", "Mã NV", "Mã KH", "Tên KH", "Ngày Bán", "Giảm Giá(%)", "Tổng Tiền", "Ghi Chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(tblHoaDon);

        btnLastHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/2.png"))); // NOI18N
        btnLastHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastHDActionPerformed(evt);
            }
        });

        btnNextHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/next.png"))); // NOI18N
        btnNextHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextHDActionPerformed(evt);
            }
        });

        btnPrevHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/prev.png"))); // NOI18N
        btnPrevHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevHDActionPerformed(evt);
            }
        });

        btnFirstHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/1.png"))); // NOI18N
        btnFirstHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(txtTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 833, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(btnFirstHD)
                                .addGap(18, 18, 18)
                                .addComponent(btnPrevHD)
                                .addGap(18, 18, 18)
                                .addComponent(btnNextHD)
                                .addGap(18, 18, 18)
                                .addComponent(btnLastHD)))
                        .addGap(0, 50, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane10)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiemHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiemHD))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNextHD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLastHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrevHD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFirstHD))
                .addContainerGap(326, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tabDanhSachHDLayout = new javax.swing.GroupLayout(tabDanhSachHD);
        tabDanhSachHD.setLayout(tabDanhSachHDLayout);
        tabDanhSachHDLayout.setHorizontalGroup(
            tabDanhSachHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDanhSachHDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabDanhSachHDLayout.setVerticalGroup(
            tabDanhSachHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDanhSachHDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabHoadon.addTab("Chi tiết hóa đơn", tabDanhSachHD);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1154, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tabHoadon, javax.swing.GroupLayout.PREFERRED_SIZE, 1154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 887, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tabHoadon, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        loadDBFormHoaDon();
        loadCboSanPhamHD();
        txtMaNVHD.setText(ShareHelper.USER.getMaNV());
        txtNgayBanHD.setText(DateHelper.toString(DateHelper.now(), "dd/MM/yyyy"));
        sinhMAHD();
        setStatusFormHD(true);
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtNgayBanHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayBanHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgayBanHDActionPerformed

    private void txtSdtKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSdtKHKeyReleased
        // TODO add your handling code here:
        loadnamekh();
        loadGiamGia();
    }//GEN-LAST:event_txtSdtKHKeyReleased

    private void cboSanPhamHDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSanPhamHDItemStateChanged
        // TODO add your handling code here:
        loadgiaban();
        loadMaSP();
    }//GEN-LAST:event_cboSanPhamHDItemStateChanged

    private void cboSanPhamHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSanPhamHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSanPhamHDActionPerformed

    private void btnClearHDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearHDCTActionPerformed
        // TODO add your handling code here:
        clearHDCT();
        sinhMAHD();
        setStatusFormHD(true);
    }//GEN-LAST:event_btnClearHDCTActionPerformed

    private void txtMaSPHDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaSPHDKeyReleased
        // TODO add your handling code here:
        SettongtienHD();
    }//GEN-LAST:event_txtMaSPHDKeyReleased

    private void btnInHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHDActionPerformed
        // TODO add your handling code here:
        rpHoaDonlll();
    }//GEN-LAST:event_btnInHDActionPerformed

    private void btnSuaHDTamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaHDTamActionPerformed
        // TODO add your handling code here:
        updateDBFromHDCT();
        loadTongTienHD();
    }//GEN-LAST:event_btnSuaHDTamActionPerformed

    private void btnXoaHDTamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHDTamActionPerformed
        // TODO add your handling code here:
        deleteDBFromHD_HDCT();
         loadTongTienHD();
    }//GEN-LAST:event_btnXoaHDTamActionPerformed

    private void btnThemHDTamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHDTamActionPerformed
        // TODO add your handling code here:
        insertHDCT();
    }//GEN-LAST:event_btnThemHDTamActionPerformed

    private void txtSoLuongHDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoLuongHDKeyReleased
        // TODO add your handling code here:
        SettongtienHD();
    }//GEN-LAST:event_txtSoLuongHDKeyReleased

    private void tblHoaDonCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonCTMouseClicked
        if (evt.getClickCount() == 1) {
            this.indexHDCT = tblHoaDonCT.rowAtPoint(evt.getPoint());
            if (this.indexHDCT >= 0) {
                this.editDisplayHDCT();
                txtSdtKH.setEditable(false);
            }
        }
    }//GEN-LAST:event_tblHoaDonCTMouseClicked

    private void btntaohoadonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntaohoadonActionPerformed
        // TODO add your handling code here:
        insertDBFromHD_HDCT();
    }//GEN-LAST:event_btntaohoadonActionPerformed

    private void txtTongHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongHDActionPerformed

    private void btnRefreshFormHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshFormHDActionPerformed
        // TODO add your handling code here:
        listhdct.removeAll(listhdct);
        setModelHD(new HoaDon());
        setModelHDCT(new HoaDonCT());
        txtSdtKH.setText("");
        txtGiamGiaHD.setText("");
        txtTenKHHD.setText("");
        txtDiaChiKHHD.setText("");
        txtTongHD.setText("");
        loadDBFormChiTietHoaDon();
       
        sinhMAHD();
        txtMaNVHD.setText(ShareHelper.USER.getMaNV());
         setStatusFormHD(true);
//        clearHDCT();
       
    }//GEN-LAST:event_btnRefreshFormHDActionPerformed

    private void btnTimKiemHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemHDActionPerformed
        // TODO add your handling code here:
        searchDBFormHoaDon();
        tabHoadon.setSelectedIndex(1);
    }//GEN-LAST:event_btnTimKiemHDActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:
        
        if (evt.getClickCount() == 2) {
            DefaultTableModel modelhdct = (DefaultTableModel) tblHoaDonCT.getModel();
            modelhdct.setRowCount(0);
            this.indexHD = tblHoaDon.rowAtPoint(evt.getPoint());
            if (this.indexHD >= 0) {
                this.editDisplayHD();
                String mahd = (String) tblHoaDon.getValueAt(this.indexHD, 0);
                String makh = (String) tblHoaDon.getValueAt(this.indexHD, 2);
                KhachHang kh = khdao.findById(makh);
                txtTenKHHD.setText(kh.getTenKH());
                txtDiaChiKHHD.setText(kh.getDiachi());
                txtSdtKH.setText(kh.getSdt());
                 listhdct = hdctdao.findByIdMaHD_HD(mahd);
                for (HoaDonCT hdct : listhdct) {
                     SanPham sp = spdao.findById(hdct.getMaSP());
                    Object[] obj = {
                        hdct.getMaSP(),sp.getTenSP(),hdct.getSoLuong(),hdct.getDonGia(),hdct.getTongTien()
                    };
                    modelhdct.addRow(obj);
                }
                setStatusFormHD(true);
//                btnSuaHDTam.setEnabled(false);
//                btnXoaHDTam.setEnabled(false);
//                btnClearHDCT.setEnabled(false);
//                btntaohoadon.setEnabled(false);
                btnInHD.setEnabled(true);
                tabHoadon.setSelectedIndex(0);
                
            }
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void btnLastHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastHDActionPerformed
        // TODO add your handling code here:
        this.indexHD = tblHoaDon.getRowCount() - 1;
        this.editDisplayHD();
    }//GEN-LAST:event_btnLastHDActionPerformed

    private void btnNextHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextHDActionPerformed
        // TODO add your handling code here:
        this.indexHD++;
        this.editDisplayHD();
    }//GEN-LAST:event_btnNextHDActionPerformed

    private void btnPrevHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevHDActionPerformed
        // TODO add your handling code here:
        this.indexHD--;
        this.editDisplayHD();
    }//GEN-LAST:event_btnPrevHDActionPerformed

    private void btnFirstHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstHDActionPerformed
        // TODO add your handling code here:
        this.indexHD = 0;
        this.editDisplayHD();
    }//GEN-LAST:event_btnFirstHDActionPerformed

    private void tabHoadonComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tabHoadonComponentShown
        // TODO add your handling code here:

        
    }//GEN-LAST:event_tabHoadonComponentShown

    private void txtTimKiemSPHDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemSPHDKeyReleased
        // TODO add your handling code here:
        loadCboSanPhamHD();
        loadgiaban();
    }//GEN-LAST:event_txtTimKiemSPHDKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearHDCT;
    private javax.swing.JButton btnFirstHD;
    private javax.swing.JButton btnInHD;
    private javax.swing.JButton btnLastHD;
    private javax.swing.JButton btnNextHD;
    private javax.swing.JButton btnPrevHD;
    private javax.swing.JButton btnRefreshFormHD;
    private javax.swing.JButton btnSuaHDTam;
    private javax.swing.JButton btnThemHDTam;
    private javax.swing.JButton btnTimKiemHD;
    private javax.swing.JButton btnXoaHDTam;
    private javax.swing.JButton btntaohoadon;
    private javax.swing.JComboBox<String> cboSanPhamHD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPanel tabCapNhatHD;
    private javax.swing.JPanel tabDanhSachHD;
    private javax.swing.JTabbedPane tabHoadon;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblHoaDonCT;
    private javax.swing.JTextField txtDiaChiKHHD;
    private javax.swing.JTextArea txtGhiChuHD;
    private javax.swing.JTextField txtGiaBanHD;
    private javax.swing.JTextField txtGiamGiaHD;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaNVHD;
    private javax.swing.JTextField txtMaSPHD;
    private javax.swing.JTextField txtNgayBanHD;
    private javax.swing.JTextField txtSdtKH;
    private javax.swing.JTextField txtSoLuongHD;
    private javax.swing.JTextField txtTenKHHD;
    private javax.swing.JTextField txtTimKiemHD;
    private javax.swing.JTextField txtTimKiemSPHD;
    private javax.swing.JTextField txtTongHD;
    // End of variables declaration//GEN-END:variables

    
    void insertHDCT() {
        if(!UtilityHelper.checkNull(txtSdtKH, "SDT", this)){
            return;
        }
        if(!UtilityHelper.checkNull(txtSoLuongHD, "Số lượng", this)){
            return;
        }
        if (!UtilityHelper.checkInt(txtSoLuongHD, this, "Số lượng sản phẩm")) {
            return;
        }
        if(!UtilityHelper.checkSL(txtMaSPHD, txtSoLuongHD, "Số lượng")){return;}
        boolean check = false;
        SettongtienHD();
        HoaDonCT modelhdct = getModelHDCT();
        if (listhdct.isEmpty()) {
            listhdct.add(modelhdct);
        } else {
            if (!listhdct.isEmpty()) {
                for (int i = 0; i < listhdct.size(); i++) {
                    if (txtMaSPHD.getText().equals(listhdct.get(i).getMaSP())) {
                        listhdct.get(i).setSoLuong(listhdct.get(i).getSoLuong() + Integer.parseInt(txtSoLuongHD.getText()));
                        listhdct.get(i).setTongTien(listhdct.get(i).getSoLuong() * listhdct.get(i).getDonGia() );
                        check = true;
                    }
                }
                if (check == false) {
                    listhdct.add(modelhdct);
                }
            }
        }
        loadTongTienHD();
        loadDBFormChiTietHoaDon();
    }

    void refreshSLSP() {
        for (int i = 0; i < tblHoaDonCT.getRowCount(); i++) {
            String masp = (String) tblHoaDonCT.getValueAt(i, 0);
            String sql = "SELECT SOLUONG as SL FROM SANPHAM WHERE MASP=?";
            ResultSet rs = JdbcHelper.executeQuery(sql, masp);
            int sl;
            int result;
            try {
                if (rs.next()) {
                    sl = rs.getInt("SL");
                    result = sl - Integer.parseInt(tblHoaDonCT.getValueAt(i, 2).toString());
                    String sql2 = "UPDATE SANPHAM SET SOLUONG=" + result + "WHERE MASP=?";
                    JdbcHelper.executeUpdate(sql2, masp);
                }
                DialogHelper.alert(this, "cập nhật số lượng hàng thành công");
            } catch (SQLException ex) {
                System.out.println(ex);
                DialogHelper.alert(this, "cập nhật số lượng hàng thất bại");
            }
        }
    }

    void insertDBFromHD_HDCT() {  
        if(!UtilityHelper.checkNull(txtSdtKH, "SDT", this)){
            return;
        }
        if(listhdct.isEmpty()){
            DialogHelper.alert(this, "Giỏ hàng rỗng!");
            return;
        }
        HoaDon modelhd = getModelHD();
        try {
            refreshSLSP();
            hddao.insert(modelhd);
            for (HoaDonCT modelhdct : listhdct) {
                hdctdao.insert(modelhdct);
            }
            DialogHelper.alert(this, "Tạo hóa đơn thành công");
            setLoaiKH_TheoTongTien();
            listhdct.removeAll(listhdct);
            loadDBFormHoaDon();
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Lỗi thêm hóa đơn");
        }
    }


    void updateDBFromHDCT() {
        if(!UtilityHelper.checkNull(txtSoLuongHD, "Số lượng", this)){
            return;
        }
        if (!UtilityHelper.checkInt(txtSoLuongHD, this, "Số lượng sản phẩm")) {
            return;
        }
        if (!UtilityHelper.checkInt(txtSoLuongHD, this, "Số lượng")) {
            return;
        }
        if(!UtilityHelper.checkSL(txtMaSPHD, txtSoLuongHD, "Số lượng")){return;}
        HoaDonCT model = getModelHDCT();
        if (tblHoaDonCT.getSelectedRow() >= 0) {
            int i = tblHoaDonCT.getSelectedRow();
            listhdct.set(i, model);
            loadDBFormChiTietHoaDon();
        }

        
    }

    void deleteDBFromHD_HDCT() {
        listhdct.remove(tblHoaDonCT.getSelectedRow());       
        loadDBFormChiTietHoaDon();
    }

    void editDisplayHDCT() {
        try {

            String masp = (String) tblHoaDonCT.getValueAt(this.indexHDCT, 0);
            for (HoaDonCT hdct : listhdct) {
                if (hdct.getMaSP().equals(masp)) {
                    setModelHDCT(hdct);
                    setStatusFormHD(false);
                    tblHoaDonCT.setRowSelectionInterval(indexHDCT, indexHDCT);
                    tblHoaDonCT.setSelectionBackground(Color.MAGENTA);
                }
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void editDisplayHD() {
        try {
            String mahd = (String) tblHoaDon.getValueAt(this.indexHD, 0);
            HoaDon modelHD = hddao.findById(mahd);
            if (modelHD != null) {
                this.setModelHD(modelHD);
                this.setStatusFormHD(false);
                tblHoaDon.setRowSelectionInterval(indexHD, indexHD);
                tblHoaDon.setSelectionBackground(Color.MAGENTA);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void clearHDCT() {
        txtGhiChuHD.setText("");
        txtSoLuongHD.setText("");
        txtTimKiemSPHD.setText("");
        txtGiaBanHD.setText("");

        txtMaSPHD.setText("");
    }

    void loadDBFormHoaDon() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        try {
            List<HoaDon> listHD = hddao.select();
            for (HoaDon hd : listHD) {
                KhachHang kh = khdao.findById(hd.getMaKH());
                Object[] obj = {
                    hd.getMaHD(), hd.getMaNV(), hd.getMaKH(),kh.getTenKH(),kh.getSdt(), hd.getNgayBan(), hd.getGiamGia(), hd.getTongTien(), hd.getGhiChu()
                };

                model.addRow(obj);
            }
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu");
        }

    }

    void loadDBFormChiTietHoaDon() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDonCT.getModel();
        model.setRowCount(0);
        try {
            for (HoaDonCT hdct : listhdct) {
                SanPham sp = spdao.findById(hdct.getMaSP());
                Object[] obj = new Object[]{hdct.getMaSP(),sp.getTenSP(), hdct.getSoLuong(), hdct.getDonGia(), hdct.getTongTien()};
                model.addRow(obj);
            }
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu phiếu nhập");
        }
    }

    void searchDBFormHoaDon() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        String keyword = txtTimKiemHD.getText();
        try {
            List<HoaDon> listHD = hddao.selectByKeyword(keyword);
            for (HoaDon hd : listHD) {
                Object[] obj = {
                    hd.getMaHD(), hd.getMaNV(), hd.getMaKH(), hd.getNgayBan(), hd.getGiamGia(), hd.getTongTien(), hd.getGhiChu()
                };

                model.addRow(obj);
            }
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu");
        }

    }

    void loadCboSanPhamHD() {
        String name = txtTimKiemSPHD.getText();
        cboSanPhamHD.setModel(spdao.LayDuLieucbb(name));
    }

    void loadnamekh() {
        String name = "";
        String diachi = "";
        try {
            List<KhachHang> list = khdao.selectKHBySDT(txtSdtKH.getText());
            if (list != null) {
                for (KhachHang kh : list) {
                    name = kh.getTenKH();
                    makhhd = kh.getMaKH();
                    diachi = kh.getDiachi();
                }
                txtTenKHHD.setText(name);
                txtDiaChiKHHD.setText(diachi);
            } else {
                DialogHelper.alert(this, "Số điện thoại này chưa được đăng ký!");
            }

        } catch (Exception e) {
        }

    }

    void loadgiaban() {
        float gia = spdao.selectGiaBan((String) cboSanPhamHD.getSelectedItem());
        txtGiaBanHD.setText(String.valueOf(gia));
    }

    void loadMaSP() {
        String masp = spdao.selectMaSP((String) cboSanPhamHD.getSelectedItem());
        txtMaSPHD.setText(masp);
    }

    void loadGiamGia() {
        int loaikh = khdao.selectLoaiKH(txtTenKHHD.getText());
        int discount = 0;
        if (loaikh == 0) {
            discount = 0;
            txtGiamGiaHD.setText(String.valueOf(discount));
        } else if (loaikh == 1) {
            discount = 5;
            txtGiamGiaHD.setText(String.valueOf(discount));
        } else if (loaikh == 2) {
            discount = 10;
            txtGiamGiaHD.setText(String.valueOf(discount));
        } else if (loaikh == 3) {
            discount = 20;
            txtGiamGiaHD.setText(String.valueOf(discount));
        }
    }

    void loadTongTienHD() {
        double tonghd = 0;
        double giamgia = Double.parseDouble(txtGiamGiaHD.getText());
        for (int i = 0; i < listhdct.size(); i++) {
            tonghd += listhdct.get(i).getTongTien()* ((100 - giamgia) / 100);
        }
        txtTongHD.setText(String.valueOf(tonghd));
    }
    
    void SettongtienHD() {
        double giaban = Double.parseDouble(txtGiaBanHD.getText());      
        double soluong = Double.parseDouble(txtSoLuongHD.getText());
        tongtienhdct = giaban * soluong ;
    }

    //set loai khach hang theo tong tien đã mua
    void setLoaiKH_TheoTongTien() {
        String tenkh = txtTenKHHD.getText();
        float tongtien = hddao.selectTongTien_MaKH(tenkh);
        int loaikh;
        if (tongtien >= 1000000 && tongtien < 5000000) {
            loaikh = 1;
            String sql = "UPDATE KHACHHANG SET LOAI=" + loaikh + " WHERE TENKH =" + "N'" + tenkh + "'";
            JdbcHelper.executeUpdate(sql);
            DialogHelper.alert(this, "Bạn đã được thăng cấp thành viên bạc!");
        } else if (tongtien >= 5000000 && tongtien < 10000000) {
            loaikh = 2;
            String sql = "UPDATE KHACHHANG SET LOAI=" + loaikh + " WHERE TENKH=" + "N'" + tenkh + "'";
            JdbcHelper.executeUpdate(sql);
            DialogHelper.alert(this, "Bạn đã được thăng cấp thành viên vàng!");
        } else if (tongtien >= 10000000) {
            loaikh = 3;
            String sql = "UPDATE KHACHHANG SET LOAI=" + loaikh + " WHERE TENKH=" + "N'" + tenkh + "'";
            JdbcHelper.executeUpdate(sql);
            DialogHelper.alert(this, "Bạn đã được thăng cấp thành viên bạch kim!");
        }
        System.out.println(tongtien);
    }
////////////

    void sinhMAHD() {
        String mahd = "HD";
        String stt = String.valueOf(tblHoaDon.getRowCount() + 1);
        txtMaHD.setText(mahd + stt);
    }

    void setModelHD(HoaDon modelHD) {
        txtMaHD.setText(modelHD.getMaHD());
        txtMaNVHD.setText(modelHD.getMaNV());
        txtGiamGiaHD.setText(String.valueOf(modelHD.getGiamGia()));
        txtNgayBanHD.setText(DateHelper.toString(modelHD.getNgayBan()));
        txtGhiChuHD.setText(modelHD.getGhiChu());
        txtTongHD.setText(String.valueOf(modelHD.getTongTien()));
    }

    HoaDon getModelHD() {
        HoaDon modelHD = new HoaDon();
        modelHD.setMaHD(txtMaHD.getText());
        modelHD.setMaNV(txtMaNVHD.getText());
        modelHD.setMaKH(makhhd);
        modelHD.setNgayBan(DateHelper.toDate(txtNgayBanHD.getText(), "dd/MM/yyyy"));
        modelHD.setGiamGia(Integer.parseInt(txtGiamGiaHD.getText()));
        modelHD.setTongTien(Float.parseFloat(txtTongHD.getText()));
        modelHD.setGhiChu(txtGhiChuHD.getText());
        return modelHD;
    }

    void setModelHDCT(HoaDonCT modelHDCT) {
        txtMaHD.setText(modelHDCT.getMaHD());
        txtMaSPHD.setText(modelHDCT.getMaSP());
        txtSoLuongHD.setText(String.valueOf(modelHDCT.getSoLuong()));
        txtGiaBanHD.setText(String.valueOf(modelHDCT.getDonGia()));
    }

    HoaDonCT getModelHDCT() {
        HoaDonCT modelHDCT = new HoaDonCT();
        modelHDCT.setMaHD(txtMaHD.getText());
        modelHDCT.setMaSP(txtMaSPHD.getText());
        modelHDCT.setSoLuong(Integer.parseInt(txtSoLuongHD.getText()));
        modelHDCT.setDonGia(Float.parseFloat(txtGiaBanHD.getText()));
        modelHDCT.setTongTien((float) tongtienhdct);
        return modelHDCT;
    }

    void setStatusFormHD(boolean insertable) {
        txtSdtKH.setEnabled(insertable);
        btnThemHDTam.setEnabled(insertable);
        btnSuaHDTam.setEnabled(!insertable);
        btnXoaHDTam.setEnabled(!insertable);

        boolean first = this.indexHD > 0;
        boolean last = this.indexHD < tblHoaDon.getRowCount() - 1;
        btnFirstHD.setEnabled(!insertable && first);
        btnPrevHD.setEnabled(!insertable && first);
        btnNextHD.setEnabled(!insertable && last);
        btnLastHD.setEnabled(!insertable && last);
    }

    void rpHoaDonlll() {
        if(listhdct.isEmpty()){
            DialogHelper.alert(this, "Phiếu rỗng!");
            return;
        }

        try {  
        HoaDon model = this.getModelHD();

        Map<String, Object> hs = new HashMap<>();
        hs.put("MaHD", model.getMaHD());
        hs.put("KhachHang", txtTenKHHD.getText());
        hs.put("NhanVien", model.getMaNV());
        hs.put("NgayBan", DateHelper.toString(model.getNgayBan()));
        hs.put("GhiChu", model.getGhiChu());
        hs.put("GiamGia",model.getGiamGia());
        hs.put("ThanhToan",model.getTongTien());
        
        DefaultTableModel tblmodel = (DefaultTableModel) tblHoaDonCT.getModel();
        JRTableModelDataSource tb = new JRTableModelDataSource(tblmodel);
            JasperDesign jd = JRXmlLoader.load("C:\\Users\\ntva1\\OneDrive\\Documents\\NetBeansProjects\\DuAn1Shop\\src\\report\\rpHoaDon.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(jd);
            

            JasperPrint jp = JasperFillManager.fillReport(jr, hs,tb);
            JasperViewer.viewReport(jp,false);

        } catch (JRException ex) {
            ex.printStackTrace();
        }
    }
    ////// kết thúc Controller Hóa đơn + hóa đơn chi tiết//////////////////////////////
}
